{"version":3,"sources":["init/actionTypes.js","init/appReducer.js","init/filmsReducers.js","init/rootReducer.js","init/store.js","components/Loader.jsx","consts.js","bus/films/Film.jsx","bus/films/Films.jsx","init/actions.js","bus/films/Search.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["SHOW_LOADER","HIDE_LOADER","FOUNDED_FILM","CLEAR_FILM","SHOW_ERROR","initialState","loading","error","film","rootReducer","combineReducers","films","state","action","type","app","store","createStore","compose","applyMiddleware","thunk","antIcon","LoadingOutlined","style","fontSize","color","spin","Loader","className","indicator","imdbUrl","title","process","queries","small","medium","large","Meta","Film","year","poster","match","hoverable","width","display","flexDirection","alignItems","justifyContent","paddingTop","borderRadius","cover","src","Image","height","description","Films","useSelector","Object","keys","length","Title","Year","Poster","imageStyle","marginBottom","hideLoader","Search","dispatch","useDispatch","useState","value","setValue","placeholder","onSearch","inputValue","trim","a","fetch","response","json","Response","message","e","showError","disabled","size","onChange","target","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAaA,EAAc,kBACdC,EAAc,kBACdC,EAAe,oBACfC,EAAa,mBACbC,EAAa,iBCFpBC,EAAe,CACnBC,SAAS,EACTC,MAAO,ICFHF,EAAe,CACnBG,KAAM,ICCKC,EAAcC,YAAgB,CACzCC,MDC0B,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC5D,OAAQA,EAAOC,MACb,KAAKZ,EACH,OAAO,2BAAKU,GAAZ,IAAmBJ,KAAK,eAAMK,EAAOL,QACvC,KAAKL,EACH,OAAO,2BAAKS,GAAZ,IAAmBJ,KAAM,KAC3B,QACE,OAAOI,ICPXG,IFCwB,WAAmC,IAAlCH,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKd,EACH,OAAO,2BAAKY,GAAZ,IAAmBN,SAAS,IAC9B,KAAKL,EACH,OAAO,2BAAKW,GAAZ,IAAmBN,SAAS,IAC9B,KAAKF,EACH,OAAO,2BAAKQ,GAAZ,IAAmBL,MAAOM,EAAON,QACnC,QACE,OAAOK,M,QGZAI,EAAQC,YAAYR,EAAaS,YAAQC,YAAgBC,O,kDCAhEC,EACJ,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,GAAIC,MAAO,WAAaC,MAAI,IAGrDC,EAAS,kBACpB,qBAAKC,UAAU,SAAf,SACE,mBAAMC,UAAWR,O,mDCVRS,EAAU,SAACC,GAAD,0CACQA,EADR,mBACwBC,aAIlCC,EAAU,CACrBC,MAAO,qBACPC,OAAQ,6CACRC,MAAO,uB,QCHDC,E,IAAAA,KAEKC,EAAO,SAAC,GAA6B,IAA3BP,EAA0B,EAA1BA,MAAOQ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAClC,OACE,qBAAKZ,UAAU,OAAf,SACE,cAAC,IAAD,CAAOK,QAASA,EAAhB,SACG,SAACQ,GAAD,OACC,mBACEC,WAAS,EACTnB,MAAO,CACLoB,MAAOF,EAAMP,MAAQ,IAAM,IAC3BU,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,WAAY,GACZC,aAAc,GAEhBC,MDpBoB,QCqBlBV,EACE,mBACEG,MAAOF,EAAMP,MAAQ,IAAM,IAC3BiB,IAAKX,EACLjB,MAAO,CAAE0B,aAAc,KAGzB,kBAAUG,MAAV,CACE7B,MAAO,CAAE0B,aAAc,EAAGN,MAAO,IAAKU,OAAQ,OApBtD,SAyBE,cAAChB,EAAD,CACEN,MAAOA,EACPuB,YAAaf,EACbhB,MAAO,CACLqB,QAAS,OACTC,cAAe,SACfC,WAAY,wBCrCfS,EAAQ,WACnB,IAAM/C,EAAOgD,aAAY,SAAC5C,GAAD,OAAWA,EAAMD,MAAMH,QAGhD,OAFgBgD,aAAY,SAAC5C,GAAD,OAAWA,EAAMG,IAAIT,WAGxC,cAAC,EAAD,IAIP,qBAAKsB,UAAU,QAAf,SACG6B,OAAOC,KAAKlD,GAAMmD,OACjB,cAAC,EAAD,CAAM5B,MAAOvB,EAAKoD,MAAOrB,KAAM/B,EAAKqD,KAAMrB,OAAQhC,EAAKsD,SAEvD,mBACEC,WAAY,CAAEC,aAAc,IAC5BV,YAAa,sBAAM1B,UAAU,aAAhB,2E,kECLVqC,EAAa,WACxB,MAAO,CACLnD,KAAMb,ICZGiE,EAAS,WACpB,IAAM5D,EAAUkD,aAAY,SAAC5C,GAAD,OAAWA,EAAMG,IAAIT,WAC3CC,EAAQiD,aAAY,SAAC5C,GAAD,OAAWA,EAAMG,IAAIR,SAEzC4D,EAAWC,cAJS,EAMAC,mBAAS,IANT,mBAMnBC,EANmB,KAMZC,EANY,KAwB1B,OACE,qBAAK3C,UAAU,SAAf,SACE,kBAAOsC,OAAP,CACEM,YAAY,sIACZC,SApBS,SAACC,GACd,GAAIA,EAAWC,OACb,IACER,GDyBmBpC,ECzBC2C,ED0B1B,uCAAO,WAAOP,GAAP,iBAAAS,EAAA,sEAEHT,EAlCG,CACLrD,KAAMd,IAkCJmE,EAhBG,CACLrD,KAAMX,IAYD,SAIoB0E,MAAM/C,EAAQC,IAJlC,cAIG+C,EAJH,gBAKgBA,EAASC,OALzB,OHvC0B,WG4CvBA,EALH,QAMMC,UACPb,EA3BC,CACLrD,KAAMZ,EACNM,KAyByBuE,IAEvBZ,EAASF,KATN,kDAWHgB,EAAA,EAAQ1E,MAAM,sSACd4D,EAASF,KAZN,0DAAP,wDCzBMM,EAAS,IACT,MAAOW,SAER3E,GAAS4D,EDcS,SAAC5D,GACxB,MAAO,CACLO,KAAMV,EACNG,SCjBqB4E,CAAU,sIAC7BF,EAAA,EAAQ1E,MAAR,gDAAyBA,GAAS,sIDoBd,IAACwB,GCPnBqD,SAAU9E,EACVA,QAASA,EACT+E,KAAK,QACLf,MAAOA,EACPgB,SAbgB,SAACJ,GACrBX,EAASW,EAAEK,OAAOjB,aC1BTkB,EAAS,WACpB,OACE,qBAAK5D,UAAU,SAAf,SACE,oBAAIA,UAAU,eAAd,mJCCO6D,EAAM,WACjB,OACE,sBAAK7D,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCES8D,G,cAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrF,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJsF,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c464fe11.chunk.js","sourcesContent":["export const SHOW_LOADER = \"APP/SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\";\r\nexport const FOUNDED_FILM = \"FILMS/SEARCH_FILM\";\r\nexport const CLEAR_FILM = \"FILMS/CLEAR_FILM\";\r\nexport const SHOW_ERROR = \"APP/SHOW_ERROR\";\r\n","import { SHOW_LOADER, HIDE_LOADER, SHOW_ERROR } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    case SHOW_ERROR:\r\n      return { ...state, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CLEAR_FILM, FOUNDED_FILM } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  film: {},\r\n};\r\n\r\nexport const filmsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOUNDED_FILM:\r\n      return { ...state, film: { ...action.film } };\r\n    case CLEAR_FILM:\r\n      return { ...state, film: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\nimport { filmsReducer } from \"./filmsReducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  films: filmsReducer,\r\n  app: appReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducer } from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, compose(applyMiddleware(thunk)));\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst antIcon = (\r\n  <LoadingOutlined style={{ fontSize: 50, color: \"#4d375d\" }} spin />\r\n);\r\n\r\nexport const Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin indicator={antIcon} />\r\n  </div>\r\n);\r\n","export const imdbUrl = (title) =>\r\n  `http://www.omdbapi.com/?t=${title}&apikey=${process.env.REACT_APP_IMDB_API_KEY}`;\r\n\r\nexport const POSTER_NOT_FOUND = \"N/A\";\r\nexport const FILM_RESPONSE_FALSE = \"False\";\r\nexport const queries = {\r\n  small: \"(max-width: 368px)\",\r\n  medium: \"(min-width: 600px) and (max-width: 1199px)\",\r\n  large: \"(min-width: 1200px)\",\r\n};\r\n","import React from \"react\";\r\nimport { Card, Skeleton, Image } from \"antd\";\r\nimport { POSTER_NOT_FOUND, queries } from \"../../consts\";\r\nimport Media from \"react-media\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport const Film = ({ title, year, poster }) => {\r\n  return (\r\n    <div className=\"film\">\r\n      <Media queries={queries}>\r\n        {(match) => (\r\n          <Card\r\n            hoverable\r\n            style={{\r\n              width: match.small ? 220 : 240,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingTop: 20,\r\n              borderRadius: 5,\r\n            }}\r\n            cover={\r\n              poster !== POSTER_NOT_FOUND ? (\r\n                <Image\r\n                  width={match.small ? 180 : 200}\r\n                  src={poster}\r\n                  style={{ borderRadius: 5 }}\r\n                />\r\n              ) : (\r\n                <Skeleton.Image\r\n                  style={{ borderRadius: 5, width: 200, height: 300 }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Meta\r\n              title={title}\r\n              description={year}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"flex-start\",\r\n              }}\r\n            />\r\n          </Card>\r\n        )}\r\n      </Media>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Loader } from \"../../components/Loader\";\r\nimport { Film } from \"./Film\";\r\nimport { Empty } from \"antd\";\r\n\r\nexport const Films = () => {\r\n  const film = useSelector((state) => state.films.film);\r\n  const loading = useSelector((state) => state.app.loading);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"films\">\r\n      {Object.keys(film).length ? (\r\n        <Film title={film.Title} year={film.Year} poster={film.Poster} />\r\n      ) : (\r\n        <Empty\r\n          imageStyle={{ marginBottom: 15 }}\r\n          description={<span className=\"films__not\">Нет фильма!</span>}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { FILM_RESPONSE_FALSE, imdbUrl } from \"../consts\";\r\nimport {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER,\r\n  FOUNDED_FILM,\r\n  SHOW_ERROR,\r\n  CLEAR_FILM,\r\n} from \"./actionTypes\";\r\nimport { message } from \"antd\";\r\n\r\nexport const showLoader = () => {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n};\r\n\r\nexport const hideLoader = () => {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n};\r\n\r\nexport const foundedFilm = (film) => {\r\n  return {\r\n    type: FOUNDED_FILM,\r\n    film,\r\n  };\r\n};\r\n\r\nexport const clearFilm = () => {\r\n  return {\r\n    type: CLEAR_FILM,\r\n  };\r\n};\r\n\r\nexport const showError = (error) => {\r\n  return {\r\n    type: SHOW_ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const searchFilm = (title) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(showLoader());\r\n      dispatch(clearFilm());\r\n      const response = await fetch(imdbUrl(title));\r\n      const json = await response.json();\r\n      if (json.Response !== FILM_RESPONSE_FALSE) {\r\n        dispatch(foundedFilm(json));\r\n      }\r\n      dispatch(hideLoader());\r\n    } catch (e) {\r\n      message.error(\"Произошла ошибка при запросе фильма, повторите попытку!\");\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchFilm, showError } from \"../../init/actions\";\r\nimport { Input } from \"antd\";\r\nimport { message } from \"antd\";\r\n\r\nexport const Search = () => {\r\n  const loading = useSelector((state) => state.app.loading);\r\n  const error = useSelector((state) => state.app.error);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const search = (inputValue) => {\r\n    if (inputValue.trim()) {\r\n      try {\r\n        dispatch(searchFilm(inputValue));\r\n        setValue(\"\");\r\n      } catch (e) {}\r\n    } else {\r\n      !error && dispatch(showError(\"Введите название фильма!\"));\r\n      message.error(`Ошибка: ${error || \"Введите название фильма!\"}`);\r\n    }\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Input.Search\r\n        placeholder=\"Введите название фильма...\"\r\n        onSearch={search}\r\n        disabled={loading}\r\n        loading={loading}\r\n        size=\"large\"\r\n        value={value}\r\n        onChange={changeHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h2 className=\"header__text\">Найди свой любимый фильм!</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Films } from \"./bus/films/Films\";\nimport { Search } from \"./bus/films/Search\";\nimport { Header } from \"./components/Header\";\n\nexport const App = () => {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Search />\n      <Films />\n    </div>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./init/store\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport \"./styles/styles.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}